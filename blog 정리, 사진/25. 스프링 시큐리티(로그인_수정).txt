1. 이전 스프링 시큐리티(로그인) 편에서 참고 유튜브에서 알려주는 방식과 현재 사용하고 있는 spring의 버전이 달라 문제가 발생하는 부분이있었다.
    한 부분만 수정하면 될 줄 알았는데 생각보다 여러 부분을 수정해야하는 바람이 따로 작성.

    중요한 것은 코드 하나하나에 대한 설명을 하지 못한다는 사실.

    물론, 코드를 수정하여도 문제를 해결할 수 있을지는 미지수이다.
    일단, 수정을 한 다음에 무엇인가 고민이라도 해보자.

2. 우선, 유튜브에 올라와 있는 내용에 없는 부분은 jwt(패키지로 구성, JwtAuthenticationFilter, JwtAuthorizationFilter, JwtProperties), BCrypt 암호화 문제로 인한 해결 부분이 존재한다.
    (유튜브 강사 깃허브 https://github.com/codingspecialist)

3. 현재 하고 싶은 것은 해쉬화된 비밀번호를 사용하여 로그인을 하는 것이므로 일단 회원가입을 했을 때, password가 해쉬로 저장되는 상황으로 되돌릴 필요가 있다고 판단.

    3-1. 사진 1번: loginForm.jsp 에서 action="/auth/loginProc" method="post" 부분 지우기.
    3-2. 사진 2번: SecurityConfig.java에서 .loginProcessingUrl("/auth/loginProc"), .defaultSuccessUrl("/"); 부분 주석처리.
    3-3. 사진 3번: PrincipalDetail.java 전부 주석처리.
    3-4. 사진 4번: PrincipalDetailsService.java 전부 주석처리.
    3-5. 사진 5번: UserApiController.java의 @AuthenticationPrincipal PrincipalDetail principal 부분 삭제.

4. 위 과정을 거쳐도 bean을 생성하지 못하는 오류를 바로잡지 못해 이전 버전으로 돌아감.(깃허브에 올려 놓은 가장 최근 버전이 20. 스프링 시큐리티(test)부분)
    (해쉬 과정까지 마치고 깃허브에 업로드.)